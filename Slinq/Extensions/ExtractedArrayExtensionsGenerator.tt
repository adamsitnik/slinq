<#@ assembly name="System.Core" #>
<#@ output extension=".cs" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="..\CodeGeneration\ArrayMethodsGenerator.tt" #><#@ include file="..\CodeGeneration\ArrayMathMethodsGenerator.tt" #>//------------------------------------------------------------------------------
// <auto-generated>look at the ExtractedArrayExtensionsGenerator.tt</auto-generated>
//------------------------------------------------------------------------------
using Slinq.Models;
using Slinq.Utils;

namespace Slinq.Extensions
{
// ReSharper disable UnusedMember.Global, ClassTooBig, MethodNamesNotMeaningful, TooManyArguments this is an API && we just follow the existing convention
    public static class ExtractedArrayExtensions
    {<# GenerateExtractedArrayMathExtensionsMethodsSet(); #>
// ReSharper restore UnusedMember.Global, ClassTooBig, MethodNamesNotMeaningful, TooManyArguments
    }
}