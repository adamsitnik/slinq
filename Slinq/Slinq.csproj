<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{6F8FA343-EAF6-4786-80BE-B7A01D2AF3FE}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Slinq</RootNamespace>
    <AssemblyName>Slinq</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <NuGetPackageImportStamp>d7d3adfd</NuGetPackageImportStamp>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <StyleCopTreatErrorsAsWarnings>true</StyleCopTreatErrorsAsWarnings>
    <CodeAnalysisRuleSet>..\RuleSet.ruleset</CodeAnalysisRuleSet>
    <RunCodeAnalysis>true</RunCodeAnalysis>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Abstract\IArraySorter.cs" />
    <Compile Include="Abstract\ICopyFreeComparer.cs" />
    <Compile Include="Abstract\IFixedCount.cs" />
    <Compile Include="Abstract\IStrongEnumerable.cs" />
    <Compile Include="Abstract\IStrongEnumerator.cs" />
    <Compile Include="Error.cs" />
    <Compile Include="Extensions\ArrayExtensions.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>ArrayExtensionsGenerator.tt</DependentUpon>
    </Compile>
    <Compile Include="Extensions\ExtractedArrayExtensions.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>ExtractedArrayExtensionsGenerator.tt</DependentUpon>
    </Compile>
    <Compile Include="Extensions\ListExtensions.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>ListExtensionsGenerator.tt</DependentUpon>
    </Compile>
    <Compile Include="Extensions\ReadOnlyCollectionExtensions.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>ReadOnlyCollectionExtensionsGenerator.tt</DependentUpon>
    </Compile>
    <Compile Include="Extensions\SortingExtensions.cs" />
    <Compile Include="Extensions\StrongEnumerable.cs" />
    <Compile Include="Extensions\StrongEnumeratorExtensions.cs" />
    <Compile Include="Iterators\RangeIterator.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>RangeIteratorGenerator.tt</DependentUpon>
    </Compile>
    <Compile Include="Iterators\RangeSelectIterator.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>RangeSelectIteratorGenerator.tt</DependentUpon>
    </Compile>
    <Compile Include="Iterators\SelectIterator.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>SelectIteratorGenerator.tt</DependentUpon>
    </Compile>
    <Compile Include="Iterators\SelectManyIterator.cs" />
    <Compile Include="Iterators\SelectWhereIterator.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>SelectWhereIteratorGenerator.tt</DependentUpon>
    </Compile>
    <Compile Include="Iterators\SortingIterator.cs" />
    <Compile Include="Iterators\WhereIterator.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>WhereIteratorGenerator.tt</DependentUpon>
    </Compile>
    <Compile Include="Iterators\WhereSelectIterator.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>WhereSelectIteratorGenerator.tt</DependentUpon>
    </Compile>
    <Compile Include="Models\ExtractedArray.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>ExtractedArrayGenerator.tt</DependentUpon>
    </Compile>
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Utils\ArrayProvider.cs" />
    <Compile Include="Utils\ArraySorterHelper.cs" />
    <Compile Include="Utils\CilGenerator.cs" />
    <Compile Include="Utils\Contract.cs" />
    <Compile Include="Utils\GenericArraySorter.cs" />
    <Compile Include="Utils\ListFactory.cs" />
    <Compile Include="Utils\ReverseEngineering.cs" />
    <Compile Include="Utils\DedicatedSortersFactory.cs" />
    <Compile Include="Utils\SourceArraySorter.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="..\RuleSet.ruleset">
      <Link>RuleSet.ruleset</Link>
    </None>
    <None Include="..\Settings.StyleCop">
      <Link>Settings.StyleCop</Link>
    </None>
    <Content Include="Extensions\ListExtensionsGenerator.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ListExtensions.cs</LastGenOutput>
      <!-- this little bastard is controlling the output file name -->
    </Content>
    <Content Include="Extensions\ArrayExtensionsGenerator.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ArrayExtensions.cs</LastGenOutput>
    </Content>
    <Content Include="Extensions\ReadOnlyCollectionExtensionsGenerator.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ReadOnlyCollectionExtensions.cs</LastGenOutput>
    </Content>
    <Content Include="Models\ExtractedArrayGenerator.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ExtractedArray.cs</LastGenOutput>
    </Content>
    <Content Include="Extensions\ExtractedArrayExtensionsGenerator.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ExtractedArrayExtensions.cs</LastGenOutput>
    </Content>
    <Content Include="Iterators\RangeIteratorGenerator.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>RangeIterator.cs</LastGenOutput>
    </Content>
    <Content Include="Iterators\RangeSelectIteratorGenerator.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>RangeSelectIterator.cs</LastGenOutput>
    </Content>
    <Content Include="Iterators\WhereIteratorGenerator.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>WhereIterator.cs</LastGenOutput>
    </Content>
    <Content Include="Iterators\SelectIteratorGenerator.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>SelectIterator.cs</LastGenOutput>
    </Content>
    <Content Include="Iterators\WhereSelectIteratorGenerator.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>WhereSelectIterator.cs</LastGenOutput>
    </Content>
    <Content Include="Iterators\SelectWhereIteratorGenerator.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>SelectWhereIterator.cs</LastGenOutput>
    </Content>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="CodeGeneration\CollectionExtensionsGenerator.tt" />
    <Content Include="CodeGeneration\ArrayMethodsGenerator.tt" />
    <Content Include="CodeGeneration\ArrayMathMethodsGenerator.tt" />
    <Content Include="CodeGeneration\IteratorsMethodsGenerator.tt" />
  </ItemGroup>
  <ItemGroup>
    <Service Include="{508349B6-6B84-4DF5-91F0-309BEEBAD82D}" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="..\packages\StyleCop.MSBuild.4.7.49.0\build\StyleCop.MSBuild.Targets" Condition="Exists('..\packages\StyleCop.MSBuild.4.7.49.0\build\StyleCop.MSBuild.Targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\StyleCop.MSBuild.4.7.49.0\build\StyleCop.MSBuild.Targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\StyleCop.MSBuild.4.7.49.0\build\StyleCop.MSBuild.Targets'))" />
  </Target>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>